id: csvDuckDBSlack
namespace: blueprint
description: |
  This flow will download a CSV file from a URL, analyze it with DuckDB, and send the results to Slack.
  This flow assumes `slack_webhook` environment variable.

inputs:
  - name: file
    type: STRING
    defaults: https://raw.githubusercontent.com/kestra-io/examples/main/datasets/orders.csv

tasks:
  - id: downloadCsv
    type: io.kestra.plugin.fs.http.Download
    uri: "{{inputs.file}}"

  - id: analyzeSales
    type: io.kestra.plugin.jdbc.duckdb.Query
    inputFiles:
      data.csv: "{{outputs.downloadCsv.uri}}"
    sql: |
      SELECT sum(total) as total, avg(quantity) as avg_quantity
      FROM read_csv_auto('{{workingDir}}/data.csv', header=True);
    fetch: true

  - id: slack
    type: io.kestra.plugin.notifications.slack.SlackIncomingWebhook
    url: "{{envs.slack_webhook}}"
    payload: |
      {"channel":"#reporting","text":"Current Sales numbers: total sales is `${{outputs.analyzeSales.rows[0].total}}` and average sales quantity is `{{outputs.analyzeSales.rows[0].avg_quantity}}`"}