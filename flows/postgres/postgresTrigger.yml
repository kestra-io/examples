id: postgresTrigger
namespace: dev

tasks:
  - id: each
    type: io.kestra.core.tasks.flows.EachParallel
    value: "{{ trigger.rows }}"
    tasks:
      - id: return
        type: io.kestra.core.tasks.debugs.Return
        format: "{{json(taskrun.value)}}"
      - id: query
        type: io.kestra.plugin.jdbc.postgresql.Query
#        sql: "{% for row in outputs.update.rows %} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{row.play_time}}, {{row.concert_id}}, TO_TIMESTAMP('{{row.timestamp_type}}', 'YYYY-MM-DDTHH:MI:SS.US') ); {% endfor %}"
#        sql: "UPDATE orders SET status = 'PROCESSED' WHERE id = {{taskrun.value.id}}"
# http://localhost:8080/ui/plugins/io.kestra.plugin.jdbc.postgresql.Query
triggers:
  - id: watch
    type: io.kestra.plugin.jdbc.postgresql.Trigger
    interval: "PT1M"
    sql: SELECT * FROM orders WHERE status = 'NEW'
