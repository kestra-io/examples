id: dataWarehouseRefresh
namespace: prod
tasks:
  - id: extractLoadToDatalake
    type: io.kestra.core.tasks.flows.Parallel
    concurrent: 8
    tasks:
      - id: microsoftDynamicsNAV
        type: io.kestra.plugin.fivetran.connectors.Sync
        connectorId: dynamics-connector
        apiKey: "{{secret('FIVETRAN_API_KEY')}}"
        apiSecret: "{{secret('FIVETRAN_API_SECRET')}}"
      - id: stripe
        type: io.kestra.plugin.singer.taps.Stripe
        startDate: "2023-06-01"
        streamsConfigurations:
        - replicationMethod: INCREMENTAL
          selected: true
        accountId: "{{envs.stripe_account_id}}"
        clientSecret: "{{envs.stripe_client_secret}}"
      - id: googleSearchConsole
        type: io.kestra.plugin.singer.taps.GoogleSearchConsole
        clientId: "{{envs.googlesearch_client_id}}"
        clientSecret: "{{envs.googlesearch_client_secret}}"
        refreshToken: "{{envs.googlesearch_refresh_token}}"
        siteUrls:
          - kestra.io/docs
          - kestra.io/plugins
        startDate: "2023-06-01"
        streamsConfigurations:
        - replicationMethod: INCREMENTAL
          selected: true
      - id: microsoftAdvertising
        type: io.kestra.plugin.fivetran.connectors.Sync
        connectorId: microsoft-advertising-connector
        apiKey: "{{secret('FIVETRAN_API_KEY')}}"
        apiSecret: "{{secret('FIVETRAN_API_SECRET')}}"
      - id: salesforce
        type: io.kestra.plugin.singer.taps.Salesforce
        clientId: "{{envs.salesforce_client_id}}"
        clientSecret: "{{envs.salesforce_client_secret}}"
        startDate: "2023-06-01"
        streamsConfigurations:
        - replicationMethod: INCREMENTAL
          selected: true
      - id: shopify
        type: io.kestra.plugin.singer.taps.Shopify
        apiKey: "{{envs.shopify_api_key}}"
        shop: marketplace
        startDate: "2023-06-01"
        streamsConfigurations:
        - replicationMethod: INCREMENTAL
          selected: true
      - id: googleAnalytics
        type: io.kestra.plugin.singer.taps.GoogleAnalytics
        startDate: "2023-06-01"
        streamsConfigurations:
        - replicationMethod: INCREMENTAL
          selected: true
      - id: notion
        type: io.kestra.plugin.airbyte.connections.Sync
        connectionId: e3b1ce92-547c-436f-b1e8-23b6936c12ab
        url: http://host.docker.internal:8000/
        username: "{{secret('AIRBYTE_USERNAME')}}"
        password: "{{secret('AIRBYTE_PASSWORD')}}"
  - id: rawSalesToBigQueryStage
    type: io.kestra.core.tasks.flows.Parallel
    concurrent: 10
    tasks:
      - id: order_details
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
      - id: orders
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
      - id: purchase_orders
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
      - id: purchase_order_details
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
      - id: invoices
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
  - id: dbt
    type: io.kestra.core.tasks.flows.WorkingDirectory
    tasks:
    - id: cloneRepository
      type: io.kestra.plugin.git.Clone
      url: https://github.com/anna-geller/kestra-ee
      branch: main
      username: anna-geller
      password: "{{envs.github_access_token}}"
    - id: dbt-setup
      type: io.kestra.plugin.dbt.cli.Setup
      profiles:
        marketplace:
          outputs:
            prod:
              type: bigquery
              dataset: dwh
              job_retries: 1
              keyfile: sa.json
              method: service-account
              project: geller
              threads: 8
              timeout_seconds: 600
          target: prod
      requirements:
        - dbt-bigquery
      runner: DOCKER
      dockerOptions:
        image: python:3.10-slim
      inputFiles:
        sa.json: |
          {{envs.gcp_creds}}
    - id: dbt-build
      type: io.kestra.plugin.dbt.cli.Build
      debug: false
      runner: DOCKER
      dockerOptions:
        image: python:3.10-slim
      inputFiles:
        sa.json: |
          {{envs.gcp_creds}}
  - id: consumptionLayer
    type: io.kestra.core.tasks.flows.Parallel
    tasks:
    - id: refreshPowerBI
      type: io.kestra.plugin.powerbi.RefreshGroupDataset
      clientId: "{{envs.azure_client_id}}"
      clientSecret: "{{envs.azure_client_secret}}"
      tenantId: "{{envs.azure_username}}"
      datasetId: salesDashboard
    - id: vertexAI
      type: io.kestra.plugin.gcp.vertexai.CustomJob
      projectId: my-gcp-project
      region: europe-west1
      displayName: Start Custom Job
      spec:
        workerPoolSpecs:
        - containerSpec:
            imageUri: gcr.io/my-gcp-project/my-dir/my-image:latest
          machineSpec:
            machineType: n1-standard-4
          replicaCount: 1
    - id: customReporting
      type: io.kestra.core.tasks.flows.EachParallel
      value: [ "https://raw.githubusercontent.com/dbt-labs/jaffle_shop/main/seeds/raw_customers.csv", "https://raw.githubusercontent.com/dbt-labs/jaffle_shop/main/seeds/raw_orders.csv", "https://raw.githubusercontent.com/dbt-labs/jaffle_shop/main/seeds/raw_payments.csv" ]
      tasks:
        - id: pythonAnalysis
          type: io.kestra.core.tasks.scripts.Python
          inputFiles:
            data.csv: "{{taskrun.value}}"
            main.py: |
              import pandas as pd
              df = pd.read_csv("data.csv")
              df.info()
          requirements:
            - pandas
taskDefaults:
  - type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
    values:
      destinationTable: "geller.dwh.{{task.id}}"
      from:
        - "gs://dwh-geller/{{task.id}}.csv"
      writeDisposition: "WRITE_TRUNCATE"
      projectId: geller
      serviceAccount: "{{envs.gcp_creds}}"
      ignoreUnknownValues: true
      autodetect: true
      format: CSV
      csvOptions:
        allowJaggedRows: true
        encoding: UTF-8
        fieldDelimiter: ","