id: trinoQuery
namespace: dev

tasks:
  - id: count-initial
    type: io.kestra.plugin.jdbc.trino.Query
    sql: select count(*) as nr_rows from tpch.tiny.customer
    fetch: true

  - id: extract
    type: io.kestra.plugin.jdbc.trino.Query
    sql: select * from tpch.sf1.customer LIMIT 5
    fetch: true

  - id: load
    type: io.kestra.plugin.jdbc.trino.Query
    sql: "{% for row in outputs.extract.rows %} insert into tpch.tiny.customer (custkey, name, address, nationkey, phone, acctbal, mktsegment, comment) values ({{row.custkey}}, '{{row.name}}', '{{row.address}}', {{row.nationkey}}, '{{row.phone}}', {{row.acctbal}}, '{{row.mktsegment}}', '{{row.comment}}'); {% endfor %}"

  - id: count-after-load
    type: io.kestra.plugin.jdbc.trino.Query
    sql: select count(*) as nr_rows from tpch.tiny.customer
    fetch: true

taskDefaults:
  - type: io.kestra.plugin.jdbc.trino.Query
    values:
      url: jdbc:trino://host.docker.internal:8090/tpch
      username: trino
