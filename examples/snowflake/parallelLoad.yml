id: parallel_load
namespace: company.team

tasks:
  - id: create_database
    type: io.kestra.plugin.jdbc.snowflake.Query
    sql: CREATE OR REPLACE DATABASE kestra;

  - id: create_table
    type: io.kestra.plugin.jdbc.snowflake.Query
    sql: |
      CREATE OR REPLACE TABLE KESTRA.PUBLIC.EMPLOYEES (
        first_name STRING ,
        last_name STRING ,
        email STRING ,
        streetaddress STRING ,
        city STRING ,
        start_date DATE
        );

  - id: extract_parallel
    type: io.kestra.core.tasks.flows.ForEach
    concurrencyLimit: 0
    values:
      - employees01.csv
      - employees02.csv
      - employees03.csv
      - employees04.csv
      - employees05.csv
    tasks:
      - id: extract
        type: io.kestra.plugin.fs.http.Download
        uri: https://raw.githubusercontent.com/kestra-io/examples/main/datasets/{{ taskrun.value }}

  - id: load_parallel
    type: io.kestra.core.tasks.flows.ForEach
    concurrencyLimit: 0
    values:
      - employees01.csv
      - employees02.csv
      - employees03.csv
      - employees04.csv
      - employees05.csv
    tasks:
      - id: load
        type: io.kestra.plugin.jdbc.snowflake.Upload
        from: "{{ outputs.extract.uri }}"
        fileName: "{{ outputs.extract.uri }}"
        prefix: raw
        stageName: "@kestra.public.%employees"
        compress: true
        disabled: false

  - id: load_from_stage
    type: io.kestra.plugin.jdbc.snowflake.Query
    sql: |
      COPY INTO KESTRA.PUBLIC.EMPLOYEES
      FROM @kestra.public.%employees
      FILE_FORMAT = (type = csv field_optionally_enclosed_by='"')
      PATTERN = 'raw/employees0[1-5].csv.gz'
      ON_ERROR = 'skip_file';
    disabled: false

taskDefaults:
  - type: io.kestra.plugin.jdbc.snowflake.Query
    values:
      url: jdbc:snowflake://<account-identifier>.snowflakecomputing.com?warehouse=DEMO
      username: "{{ secret('SNOWFLAKE_USERNAME') }}"
      password: "{{ secret('SNOWFLAKE_PASSWORD') }}"
  - type: io.kestra.plugin.jdbc.snowflake.Upload
    values:
      url: jdbc:snowflake://<account-identifier>.snowflakecomputing.com?warehouse=DEMO
      username: "{{ secret('SNOWFLAKE_USERNAME') }}"
      password: "{{ secret('SNOWFLAKE_PASSWORD') }}"